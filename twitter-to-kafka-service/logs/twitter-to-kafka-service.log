2022-02-13 13:22:15 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplicationKt - Starting TwitterToKafkaServiceApplicationKt using Java 11.0.11 on DESKTOP-3J5SO4P with PID 13028 (C:\kotlin-microservices-study\microservices-demo\twitter-to-kafka-service\build\classes\kotlin\main started by Luiz in C:\kotlin-microservices-study\microservices-demo)
2022-02-13 13:22:15 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplicationKt - No active profile set, falling back to default profiles: default
2022-02-13 13:22:15 [main] WARN  o.s.c.a.AnnotationConfigApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterToKafkaServiceApplication': Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'twitterToKafkaServiceConfigData' defined in file [C:\kotlin-microservices-study\microservices-demo\twitter-to-kafka-service\build\classes\kotlin\main\com\microservices\demo\twitter\to\kafka\service\config\TwitterToKafkaServiceConfigData.class]: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.microservices.demo.twitter.to.kafka.service.config.TwitterToKafkaServiceConfigData$$EnhancerBySpringCGLIB$$e8fb6a83]: No default constructor found; nested exception is java.lang.NoSuchMethodException: com.microservices.demo.twitter.to.kafka.service.config.TwitterToKafkaServiceConfigData$$EnhancerBySpringCGLIB$$e8fb6a83.<init>()
2022-02-13 13:22:15 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2022-02-13 13:22:15 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterToKafkaServiceApplication': Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'twitterToKafkaServiceConfigData' defined in file [C:\kotlin-microservices-study\microservices-demo\twitter-to-kafka-service\build\classes\kotlin\main\com\microservices\demo\twitter\to\kafka\service\config\TwitterToKafkaServiceConfigData.class]: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.microservices.demo.twitter.to.kafka.service.config.TwitterToKafkaServiceConfigData$$EnhancerBySpringCGLIB$$e8fb6a83]: No default constructor found; nested exception is java.lang.NoSuchMethodException: com.microservices.demo.twitter.to.kafka.service.config.TwitterToKafkaServiceConfigData$$EnhancerBySpringCGLIB$$e8fb6a83.<init>()
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:953)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:414)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:302)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292)
	at com.microservices.demo.twitter.to.kafka.service.TwitterToKafkaServiceApplicationKt.main(TwitterToKafkaServiceApplication.kt:34)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'twitterToKafkaServiceConfigData' defined in file [C:\kotlin-microservices-study\microservices-demo\twitter-to-kafka-service\build\classes\kotlin\main\com\microservices\demo\twitter\to\kafka\service\config\TwitterToKafkaServiceConfigData.class]: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.microservices.demo.twitter.to.kafka.service.config.TwitterToKafkaServiceConfigData$$EnhancerBySpringCGLIB$$e8fb6a83]: No default constructor found; nested exception is java.lang.NoSuchMethodException: com.microservices.demo.twitter.to.kafka.service.config.TwitterToKafkaServiceConfigData$$EnhancerBySpringCGLIB$$e8fb6a83.<init>()
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1334)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1232)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1389)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1309)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 18 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.microservices.demo.twitter.to.kafka.service.config.TwitterToKafkaServiceConfigData$$EnhancerBySpringCGLIB$$e8fb6a83]: No default constructor found; nested exception is java.lang.NoSuchMethodException: com.microservices.demo.twitter.to.kafka.service.config.TwitterToKafkaServiceConfigData$$EnhancerBySpringCGLIB$$e8fb6a83.<init>()
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:83)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1326)
	... 30 common frames omitted
Caused by: java.lang.NoSuchMethodException: com.microservices.demo.twitter.to.kafka.service.config.TwitterToKafkaServiceConfigData$$EnhancerBySpringCGLIB$$e8fb6a83.<init>()
	at java.base/java.lang.Class.getConstructor0(Class.java:3349)
	at java.base/java.lang.Class.getDeclaredConstructor(Class.java:2553)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:78)
	... 31 common frames omitted
2022-02-13 13:24:15 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplicationKt - Starting TwitterToKafkaServiceApplicationKt using Java 11.0.11 on DESKTOP-3J5SO4P with PID 12628 (C:\kotlin-microservices-study\microservices-demo\twitter-to-kafka-service\build\classes\kotlin\main started by Luiz in C:\kotlin-microservices-study\microservices-demo)
2022-02-13 13:24:15 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplicationKt - No active profile set, falling back to default profiles: default
2022-02-13 13:24:16 [main] WARN  o.s.c.a.AnnotationConfigApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterToKafkaServiceApplication': Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'twitterToKafkaServiceConfigData' defined in file [C:\kotlin-microservices-study\microservices-demo\twitter-to-kafka-service\build\classes\kotlin\main\com\microservices\demo\twitter\to\kafka\service\config\TwitterToKafkaServiceConfigData.class]: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.microservices.demo.twitter.to.kafka.service.config.TwitterToKafkaServiceConfigData$$EnhancerBySpringCGLIB$$84ca15f9]: No default constructor found; nested exception is java.lang.NoSuchMethodException: com.microservices.demo.twitter.to.kafka.service.config.TwitterToKafkaServiceConfigData$$EnhancerBySpringCGLIB$$84ca15f9.<init>()
2022-02-13 13:24:16 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2022-02-13 13:24:16 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterToKafkaServiceApplication': Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'twitterToKafkaServiceConfigData' defined in file [C:\kotlin-microservices-study\microservices-demo\twitter-to-kafka-service\build\classes\kotlin\main\com\microservices\demo\twitter\to\kafka\service\config\TwitterToKafkaServiceConfigData.class]: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.microservices.demo.twitter.to.kafka.service.config.TwitterToKafkaServiceConfigData$$EnhancerBySpringCGLIB$$84ca15f9]: No default constructor found; nested exception is java.lang.NoSuchMethodException: com.microservices.demo.twitter.to.kafka.service.config.TwitterToKafkaServiceConfigData$$EnhancerBySpringCGLIB$$84ca15f9.<init>()
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:953)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:414)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:302)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292)
	at com.microservices.demo.twitter.to.kafka.service.TwitterToKafkaServiceApplicationKt.main(TwitterToKafkaServiceApplication.kt:34)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'twitterToKafkaServiceConfigData' defined in file [C:\kotlin-microservices-study\microservices-demo\twitter-to-kafka-service\build\classes\kotlin\main\com\microservices\demo\twitter\to\kafka\service\config\TwitterToKafkaServiceConfigData.class]: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.microservices.demo.twitter.to.kafka.service.config.TwitterToKafkaServiceConfigData$$EnhancerBySpringCGLIB$$84ca15f9]: No default constructor found; nested exception is java.lang.NoSuchMethodException: com.microservices.demo.twitter.to.kafka.service.config.TwitterToKafkaServiceConfigData$$EnhancerBySpringCGLIB$$84ca15f9.<init>()
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1334)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1232)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1389)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1309)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 18 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.microservices.demo.twitter.to.kafka.service.config.TwitterToKafkaServiceConfigData$$EnhancerBySpringCGLIB$$84ca15f9]: No default constructor found; nested exception is java.lang.NoSuchMethodException: com.microservices.demo.twitter.to.kafka.service.config.TwitterToKafkaServiceConfigData$$EnhancerBySpringCGLIB$$84ca15f9.<init>()
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:83)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1326)
	... 30 common frames omitted
Caused by: java.lang.NoSuchMethodException: com.microservices.demo.twitter.to.kafka.service.config.TwitterToKafkaServiceConfigData$$EnhancerBySpringCGLIB$$84ca15f9.<init>()
	at java.base/java.lang.Class.getConstructor0(Class.java:3349)
	at java.base/java.lang.Class.getDeclaredConstructor(Class.java:2553)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:78)
	... 31 common frames omitted
2022-02-13 13:25:26 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplicationKt - Starting TwitterToKafkaServiceApplicationKt using Java 11.0.11 on DESKTOP-3J5SO4P with PID 11956 (C:\kotlin-microservices-study\microservices-demo\twitter-to-kafka-service\build\classes\kotlin\main started by Luiz in C:\kotlin-microservices-study\microservices-demo)
2022-02-13 13:25:26 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplicationKt - No active profile set, falling back to default profiles: default
2022-02-13 13:25:27 [main] WARN  o.s.c.a.AnnotationConfigApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterToKafkaServiceApplication': Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'twitterToKafkaServiceConfigData' defined in file [C:\kotlin-microservices-study\microservices-demo\twitter-to-kafka-service\build\classes\kotlin\main\com\microservices\demo\twitter\to\kafka\service\config\TwitterToKafkaServiceConfigData.class]: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.microservices.demo.twitter.to.kafka.service.config.TwitterToKafkaServiceConfigData$$EnhancerBySpringCGLIB$$f0135fd4]: No default constructor found; nested exception is java.lang.NoSuchMethodException: com.microservices.demo.twitter.to.kafka.service.config.TwitterToKafkaServiceConfigData$$EnhancerBySpringCGLIB$$f0135fd4.<init>()
2022-02-13 13:25:27 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2022-02-13 13:25:27 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterToKafkaServiceApplication': Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'twitterToKafkaServiceConfigData' defined in file [C:\kotlin-microservices-study\microservices-demo\twitter-to-kafka-service\build\classes\kotlin\main\com\microservices\demo\twitter\to\kafka\service\config\TwitterToKafkaServiceConfigData.class]: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.microservices.demo.twitter.to.kafka.service.config.TwitterToKafkaServiceConfigData$$EnhancerBySpringCGLIB$$f0135fd4]: No default constructor found; nested exception is java.lang.NoSuchMethodException: com.microservices.demo.twitter.to.kafka.service.config.TwitterToKafkaServiceConfigData$$EnhancerBySpringCGLIB$$f0135fd4.<init>()
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:953)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:414)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:302)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292)
	at com.microservices.demo.twitter.to.kafka.service.TwitterToKafkaServiceApplicationKt.main(TwitterToKafkaServiceApplication.kt:34)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'twitterToKafkaServiceConfigData' defined in file [C:\kotlin-microservices-study\microservices-demo\twitter-to-kafka-service\build\classes\kotlin\main\com\microservices\demo\twitter\to\kafka\service\config\TwitterToKafkaServiceConfigData.class]: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.microservices.demo.twitter.to.kafka.service.config.TwitterToKafkaServiceConfigData$$EnhancerBySpringCGLIB$$f0135fd4]: No default constructor found; nested exception is java.lang.NoSuchMethodException: com.microservices.demo.twitter.to.kafka.service.config.TwitterToKafkaServiceConfigData$$EnhancerBySpringCGLIB$$f0135fd4.<init>()
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1334)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1232)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1389)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1309)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 18 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.microservices.demo.twitter.to.kafka.service.config.TwitterToKafkaServiceConfigData$$EnhancerBySpringCGLIB$$f0135fd4]: No default constructor found; nested exception is java.lang.NoSuchMethodException: com.microservices.demo.twitter.to.kafka.service.config.TwitterToKafkaServiceConfigData$$EnhancerBySpringCGLIB$$f0135fd4.<init>()
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:83)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1326)
	... 30 common frames omitted
Caused by: java.lang.NoSuchMethodException: com.microservices.demo.twitter.to.kafka.service.config.TwitterToKafkaServiceConfigData$$EnhancerBySpringCGLIB$$f0135fd4.<init>()
	at java.base/java.lang.Class.getConstructor0(Class.java:3349)
	at java.base/java.lang.Class.getDeclaredConstructor(Class.java:2553)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:78)
	... 31 common frames omitted
2022-02-13 13:29:54 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplicationKt - Starting TwitterToKafkaServiceApplicationKt using Java 11.0.11 on DESKTOP-3J5SO4P with PID 1088 (C:\kotlin-microservices-study\microservices-demo\twitter-to-kafka-service\build\classes\kotlin\main started by Luiz in C:\kotlin-microservices-study\microservices-demo)
2022-02-13 13:29:54 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplicationKt - No active profile set, falling back to default profiles: default
2022-02-13 13:29:55 [main] WARN  o.s.c.a.AnnotationConfigApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterToKafkaServiceApplication': Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'twitterToKafkaServiceConfigData' defined in file [C:\kotlin-microservices-study\microservices-demo\twitter-to-kafka-service\build\classes\kotlin\main\com\microservices\demo\twitter\to\kafka\service\config\TwitterToKafkaServiceConfigData.class]: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.microservices.demo.twitter.to.kafka.service.config.TwitterToKafkaServiceConfigData$$EnhancerBySpringCGLIB$$84ca15f9]: No default constructor found; nested exception is java.lang.NoSuchMethodException: com.microservices.demo.twitter.to.kafka.service.config.TwitterToKafkaServiceConfigData$$EnhancerBySpringCGLIB$$84ca15f9.<init>()
2022-02-13 13:29:55 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2022-02-13 13:29:55 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterToKafkaServiceApplication': Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'twitterToKafkaServiceConfigData' defined in file [C:\kotlin-microservices-study\microservices-demo\twitter-to-kafka-service\build\classes\kotlin\main\com\microservices\demo\twitter\to\kafka\service\config\TwitterToKafkaServiceConfigData.class]: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.microservices.demo.twitter.to.kafka.service.config.TwitterToKafkaServiceConfigData$$EnhancerBySpringCGLIB$$84ca15f9]: No default constructor found; nested exception is java.lang.NoSuchMethodException: com.microservices.demo.twitter.to.kafka.service.config.TwitterToKafkaServiceConfigData$$EnhancerBySpringCGLIB$$84ca15f9.<init>()
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:953)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:414)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:302)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292)
	at com.microservices.demo.twitter.to.kafka.service.TwitterToKafkaServiceApplicationKt.main(TwitterToKafkaServiceApplication.kt:34)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'twitterToKafkaServiceConfigData' defined in file [C:\kotlin-microservices-study\microservices-demo\twitter-to-kafka-service\build\classes\kotlin\main\com\microservices\demo\twitter\to\kafka\service\config\TwitterToKafkaServiceConfigData.class]: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.microservices.demo.twitter.to.kafka.service.config.TwitterToKafkaServiceConfigData$$EnhancerBySpringCGLIB$$84ca15f9]: No default constructor found; nested exception is java.lang.NoSuchMethodException: com.microservices.demo.twitter.to.kafka.service.config.TwitterToKafkaServiceConfigData$$EnhancerBySpringCGLIB$$84ca15f9.<init>()
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1334)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1232)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1389)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1309)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 18 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.microservices.demo.twitter.to.kafka.service.config.TwitterToKafkaServiceConfigData$$EnhancerBySpringCGLIB$$84ca15f9]: No default constructor found; nested exception is java.lang.NoSuchMethodException: com.microservices.demo.twitter.to.kafka.service.config.TwitterToKafkaServiceConfigData$$EnhancerBySpringCGLIB$$84ca15f9.<init>()
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:83)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1326)
	... 30 common frames omitted
Caused by: java.lang.NoSuchMethodException: com.microservices.demo.twitter.to.kafka.service.config.TwitterToKafkaServiceConfigData$$EnhancerBySpringCGLIB$$84ca15f9.<init>()
	at java.base/java.lang.Class.getConstructor0(Class.java:3349)
	at java.base/java.lang.Class.getDeclaredConstructor(Class.java:2553)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:78)
	... 31 common frames omitted
2022-02-13 13:31:25 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplicationKt - Starting TwitterToKafkaServiceApplicationKt using Java 11.0.11 on DESKTOP-3J5SO4P with PID 24644 (C:\kotlin-microservices-study\microservices-demo\twitter-to-kafka-service\build\classes\kotlin\main started by Luiz in C:\kotlin-microservices-study\microservices-demo)
2022-02-13 13:31:25 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplicationKt - No active profile set, falling back to default profiles: default
2022-02-13 13:31:25 [main] WARN  o.s.c.a.AnnotationConfigApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterToKafkaServiceApplication': Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'twitterToKafkaServiceConfigData' defined in file [C:\kotlin-microservices-study\microservices-demo\twitter-to-kafka-service\build\classes\kotlin\main\com\microservices\demo\twitter\to\kafka\service\config\TwitterToKafkaServiceConfigData.class]: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.microservices.demo.twitter.to.kafka.service.config.TwitterToKafkaServiceConfigData$$EnhancerBySpringCGLIB$$84ca15f9]: No default constructor found; nested exception is java.lang.NoSuchMethodException: com.microservices.demo.twitter.to.kafka.service.config.TwitterToKafkaServiceConfigData$$EnhancerBySpringCGLIB$$84ca15f9.<init>()
2022-02-13 13:31:25 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2022-02-13 13:31:25 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterToKafkaServiceApplication': Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'twitterToKafkaServiceConfigData' defined in file [C:\kotlin-microservices-study\microservices-demo\twitter-to-kafka-service\build\classes\kotlin\main\com\microservices\demo\twitter\to\kafka\service\config\TwitterToKafkaServiceConfigData.class]: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.microservices.demo.twitter.to.kafka.service.config.TwitterToKafkaServiceConfigData$$EnhancerBySpringCGLIB$$84ca15f9]: No default constructor found; nested exception is java.lang.NoSuchMethodException: com.microservices.demo.twitter.to.kafka.service.config.TwitterToKafkaServiceConfigData$$EnhancerBySpringCGLIB$$84ca15f9.<init>()
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:953)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:414)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:302)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292)
	at com.microservices.demo.twitter.to.kafka.service.TwitterToKafkaServiceApplicationKt.main(TwitterToKafkaServiceApplication.kt:34)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'twitterToKafkaServiceConfigData' defined in file [C:\kotlin-microservices-study\microservices-demo\twitter-to-kafka-service\build\classes\kotlin\main\com\microservices\demo\twitter\to\kafka\service\config\TwitterToKafkaServiceConfigData.class]: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.microservices.demo.twitter.to.kafka.service.config.TwitterToKafkaServiceConfigData$$EnhancerBySpringCGLIB$$84ca15f9]: No default constructor found; nested exception is java.lang.NoSuchMethodException: com.microservices.demo.twitter.to.kafka.service.config.TwitterToKafkaServiceConfigData$$EnhancerBySpringCGLIB$$84ca15f9.<init>()
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1334)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1232)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1389)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1309)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 18 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.microservices.demo.twitter.to.kafka.service.config.TwitterToKafkaServiceConfigData$$EnhancerBySpringCGLIB$$84ca15f9]: No default constructor found; nested exception is java.lang.NoSuchMethodException: com.microservices.demo.twitter.to.kafka.service.config.TwitterToKafkaServiceConfigData$$EnhancerBySpringCGLIB$$84ca15f9.<init>()
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:83)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1326)
	... 30 common frames omitted
Caused by: java.lang.NoSuchMethodException: com.microservices.demo.twitter.to.kafka.service.config.TwitterToKafkaServiceConfigData$$EnhancerBySpringCGLIB$$84ca15f9.<init>()
	at java.base/java.lang.Class.getConstructor0(Class.java:3349)
	at java.base/java.lang.Class.getDeclaredConstructor(Class.java:2553)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:78)
	... 31 common frames omitted
2022-02-13 13:32:43 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplicationKt - Starting TwitterToKafkaServiceApplicationKt using Java 11.0.11 on DESKTOP-3J5SO4P with PID 27508 (C:\kotlin-microservices-study\microservices-demo\twitter-to-kafka-service\build\classes\kotlin\main started by Luiz in C:\kotlin-microservices-study\microservices-demo)
2022-02-13 13:32:43 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplicationKt - No active profile set, falling back to default profiles: default
2022-02-13 13:32:43 [main] WARN  o.s.c.a.AnnotationConfigApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterToKafkaServiceApplication': Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'twitterToKafkaServiceConfigData' defined in file [C:\kotlin-microservices-study\microservices-demo\twitter-to-kafka-service\build\classes\kotlin\main\com\microservices\demo\twitter\to\kafka\service\config\TwitterToKafkaServiceConfigData.class]: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.microservices.demo.twitter.to.kafka.service.config.TwitterToKafkaServiceConfigData$$EnhancerBySpringCGLIB$$f0135fd4]: No default constructor found; nested exception is java.lang.NoSuchMethodException: com.microservices.demo.twitter.to.kafka.service.config.TwitterToKafkaServiceConfigData$$EnhancerBySpringCGLIB$$f0135fd4.<init>()
2022-02-13 13:32:43 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2022-02-13 13:32:43 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterToKafkaServiceApplication': Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'twitterToKafkaServiceConfigData' defined in file [C:\kotlin-microservices-study\microservices-demo\twitter-to-kafka-service\build\classes\kotlin\main\com\microservices\demo\twitter\to\kafka\service\config\TwitterToKafkaServiceConfigData.class]: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.microservices.demo.twitter.to.kafka.service.config.TwitterToKafkaServiceConfigData$$EnhancerBySpringCGLIB$$f0135fd4]: No default constructor found; nested exception is java.lang.NoSuchMethodException: com.microservices.demo.twitter.to.kafka.service.config.TwitterToKafkaServiceConfigData$$EnhancerBySpringCGLIB$$f0135fd4.<init>()
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:953)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:414)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:302)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292)
	at com.microservices.demo.twitter.to.kafka.service.TwitterToKafkaServiceApplicationKt.main(TwitterToKafkaServiceApplication.kt:34)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'twitterToKafkaServiceConfigData' defined in file [C:\kotlin-microservices-study\microservices-demo\twitter-to-kafka-service\build\classes\kotlin\main\com\microservices\demo\twitter\to\kafka\service\config\TwitterToKafkaServiceConfigData.class]: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.microservices.demo.twitter.to.kafka.service.config.TwitterToKafkaServiceConfigData$$EnhancerBySpringCGLIB$$f0135fd4]: No default constructor found; nested exception is java.lang.NoSuchMethodException: com.microservices.demo.twitter.to.kafka.service.config.TwitterToKafkaServiceConfigData$$EnhancerBySpringCGLIB$$f0135fd4.<init>()
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1334)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1232)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1389)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1309)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 18 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.microservices.demo.twitter.to.kafka.service.config.TwitterToKafkaServiceConfigData$$EnhancerBySpringCGLIB$$f0135fd4]: No default constructor found; nested exception is java.lang.NoSuchMethodException: com.microservices.demo.twitter.to.kafka.service.config.TwitterToKafkaServiceConfigData$$EnhancerBySpringCGLIB$$f0135fd4.<init>()
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:83)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1326)
	... 30 common frames omitted
Caused by: java.lang.NoSuchMethodException: com.microservices.demo.twitter.to.kafka.service.config.TwitterToKafkaServiceConfigData$$EnhancerBySpringCGLIB$$f0135fd4.<init>()
	at java.base/java.lang.Class.getConstructor0(Class.java:3349)
	at java.base/java.lang.Class.getDeclaredConstructor(Class.java:2553)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:78)
	... 31 common frames omitted
2022-02-13 13:33:10 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplicationKt - Starting TwitterToKafkaServiceApplicationKt using Java 11.0.11 on DESKTOP-3J5SO4P with PID 14152 (C:\kotlin-microservices-study\microservices-demo\twitter-to-kafka-service\build\classes\kotlin\main started by Luiz in C:\kotlin-microservices-study\microservices-demo)
2022-02-13 13:33:10 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplicationKt - No active profile set, falling back to default profiles: default
2022-02-13 13:33:10 [main] WARN  o.s.c.a.AnnotationConfigApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterToKafkaServiceApplication': Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'twitterToKafkaServiceConfigData' defined in file [C:\kotlin-microservices-study\microservices-demo\twitter-to-kafka-service\build\classes\kotlin\main\com\microservices\demo\twitter\to\kafka\service\config\TwitterToKafkaServiceConfigData.class]: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.microservices.demo.twitter.to.kafka.service.config.TwitterToKafkaServiceConfigData$$EnhancerBySpringCGLIB$$84ca15f9]: No default constructor found; nested exception is java.lang.NoSuchMethodException: com.microservices.demo.twitter.to.kafka.service.config.TwitterToKafkaServiceConfigData$$EnhancerBySpringCGLIB$$84ca15f9.<init>()
2022-02-13 13:33:10 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2022-02-13 13:33:10 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterToKafkaServiceApplication': Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'twitterToKafkaServiceConfigData' defined in file [C:\kotlin-microservices-study\microservices-demo\twitter-to-kafka-service\build\classes\kotlin\main\com\microservices\demo\twitter\to\kafka\service\config\TwitterToKafkaServiceConfigData.class]: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.microservices.demo.twitter.to.kafka.service.config.TwitterToKafkaServiceConfigData$$EnhancerBySpringCGLIB$$84ca15f9]: No default constructor found; nested exception is java.lang.NoSuchMethodException: com.microservices.demo.twitter.to.kafka.service.config.TwitterToKafkaServiceConfigData$$EnhancerBySpringCGLIB$$84ca15f9.<init>()
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:953)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:414)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:302)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292)
	at com.microservices.demo.twitter.to.kafka.service.TwitterToKafkaServiceApplicationKt.main(TwitterToKafkaServiceApplication.kt:34)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'twitterToKafkaServiceConfigData' defined in file [C:\kotlin-microservices-study\microservices-demo\twitter-to-kafka-service\build\classes\kotlin\main\com\microservices\demo\twitter\to\kafka\service\config\TwitterToKafkaServiceConfigData.class]: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.microservices.demo.twitter.to.kafka.service.config.TwitterToKafkaServiceConfigData$$EnhancerBySpringCGLIB$$84ca15f9]: No default constructor found; nested exception is java.lang.NoSuchMethodException: com.microservices.demo.twitter.to.kafka.service.config.TwitterToKafkaServiceConfigData$$EnhancerBySpringCGLIB$$84ca15f9.<init>()
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1334)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1232)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1389)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1309)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 18 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.microservices.demo.twitter.to.kafka.service.config.TwitterToKafkaServiceConfigData$$EnhancerBySpringCGLIB$$84ca15f9]: No default constructor found; nested exception is java.lang.NoSuchMethodException: com.microservices.demo.twitter.to.kafka.service.config.TwitterToKafkaServiceConfigData$$EnhancerBySpringCGLIB$$84ca15f9.<init>()
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:83)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1326)
	... 30 common frames omitted
Caused by: java.lang.NoSuchMethodException: com.microservices.demo.twitter.to.kafka.service.config.TwitterToKafkaServiceConfigData$$EnhancerBySpringCGLIB$$84ca15f9.<init>()
	at java.base/java.lang.Class.getConstructor0(Class.java:3349)
	at java.base/java.lang.Class.getDeclaredConstructor(Class.java:2553)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:78)
	... 31 common frames omitted
2022-02-13 13:33:43 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplicationKt - Starting TwitterToKafkaServiceApplicationKt using Java 11.0.11 on DESKTOP-3J5SO4P with PID 19472 (C:\kotlin-microservices-study\microservices-demo\twitter-to-kafka-service\build\classes\kotlin\main started by Luiz in C:\kotlin-microservices-study\microservices-demo)
2022-02-13 13:33:43 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplicationKt - No active profile set, falling back to default profiles: default
2022-02-13 13:33:43 [main] WARN  o.s.c.a.AnnotationConfigApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterToKafkaServiceApplication': Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'twitterToKafkaServiceConfigData' defined in file [C:\kotlin-microservices-study\microservices-demo\twitter-to-kafka-service\build\classes\kotlin\main\com\microservices\demo\twitter\to\kafka\service\config\TwitterToKafkaServiceConfigData.class]: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.microservices.demo.twitter.to.kafka.service.config.TwitterToKafkaServiceConfigData$$EnhancerBySpringCGLIB$$d472c34e]: No default constructor found; nested exception is java.lang.NoSuchMethodException: com.microservices.demo.twitter.to.kafka.service.config.TwitterToKafkaServiceConfigData$$EnhancerBySpringCGLIB$$d472c34e.<init>()
2022-02-13 13:33:43 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2022-02-13 13:33:43 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterToKafkaServiceApplication': Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'twitterToKafkaServiceConfigData' defined in file [C:\kotlin-microservices-study\microservices-demo\twitter-to-kafka-service\build\classes\kotlin\main\com\microservices\demo\twitter\to\kafka\service\config\TwitterToKafkaServiceConfigData.class]: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.microservices.demo.twitter.to.kafka.service.config.TwitterToKafkaServiceConfigData$$EnhancerBySpringCGLIB$$d472c34e]: No default constructor found; nested exception is java.lang.NoSuchMethodException: com.microservices.demo.twitter.to.kafka.service.config.TwitterToKafkaServiceConfigData$$EnhancerBySpringCGLIB$$d472c34e.<init>()
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:953)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:414)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:302)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292)
	at com.microservices.demo.twitter.to.kafka.service.TwitterToKafkaServiceApplicationKt.main(TwitterToKafkaServiceApplication.kt:34)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'twitterToKafkaServiceConfigData' defined in file [C:\kotlin-microservices-study\microservices-demo\twitter-to-kafka-service\build\classes\kotlin\main\com\microservices\demo\twitter\to\kafka\service\config\TwitterToKafkaServiceConfigData.class]: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.microservices.demo.twitter.to.kafka.service.config.TwitterToKafkaServiceConfigData$$EnhancerBySpringCGLIB$$d472c34e]: No default constructor found; nested exception is java.lang.NoSuchMethodException: com.microservices.demo.twitter.to.kafka.service.config.TwitterToKafkaServiceConfigData$$EnhancerBySpringCGLIB$$d472c34e.<init>()
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1334)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1232)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1389)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1309)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 18 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.microservices.demo.twitter.to.kafka.service.config.TwitterToKafkaServiceConfigData$$EnhancerBySpringCGLIB$$d472c34e]: No default constructor found; nested exception is java.lang.NoSuchMethodException: com.microservices.demo.twitter.to.kafka.service.config.TwitterToKafkaServiceConfigData$$EnhancerBySpringCGLIB$$d472c34e.<init>()
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:83)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1326)
	... 30 common frames omitted
Caused by: java.lang.NoSuchMethodException: com.microservices.demo.twitter.to.kafka.service.config.TwitterToKafkaServiceConfigData$$EnhancerBySpringCGLIB$$d472c34e.<init>()
	at java.base/java.lang.Class.getConstructor0(Class.java:3349)
	at java.base/java.lang.Class.getDeclaredConstructor(Class.java:2553)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:78)
	... 31 common frames omitted
2022-02-13 13:38:31 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplicationKt - Starting TwitterToKafkaServiceApplicationKt using Java 11.0.11 on DESKTOP-3J5SO4P with PID 16364 (C:\kotlin-microservices-study\microservices-demo\twitter-to-kafka-service\build\classes\kotlin\main started by Luiz in C:\kotlin-microservices-study\microservices-demo)
2022-02-13 13:38:31 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplicationKt - No active profile set, falling back to default profiles: default
2022-02-13 13:38:32 [main] WARN  o.s.c.a.AnnotationConfigApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterToKafkaServiceApplication': Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'twitterToKafkaServiceConfigData' defined in file [C:\kotlin-microservices-study\microservices-demo\twitter-to-kafka-service\build\classes\kotlin\main\com\microservices\demo\twitter\to\kafka\service\config\TwitterToKafkaServiceConfigData.class]: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.microservices.demo.twitter.to.kafka.service.config.TwitterToKafkaServiceConfigData$$EnhancerBySpringCGLIB$$f0135fd4]: No default constructor found; nested exception is java.lang.NoSuchMethodException: com.microservices.demo.twitter.to.kafka.service.config.TwitterToKafkaServiceConfigData$$EnhancerBySpringCGLIB$$f0135fd4.<init>()
2022-02-13 13:38:32 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2022-02-13 13:38:32 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterToKafkaServiceApplication': Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'twitterToKafkaServiceConfigData' defined in file [C:\kotlin-microservices-study\microservices-demo\twitter-to-kafka-service\build\classes\kotlin\main\com\microservices\demo\twitter\to\kafka\service\config\TwitterToKafkaServiceConfigData.class]: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.microservices.demo.twitter.to.kafka.service.config.TwitterToKafkaServiceConfigData$$EnhancerBySpringCGLIB$$f0135fd4]: No default constructor found; nested exception is java.lang.NoSuchMethodException: com.microservices.demo.twitter.to.kafka.service.config.TwitterToKafkaServiceConfigData$$EnhancerBySpringCGLIB$$f0135fd4.<init>()
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:953)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:414)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:302)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292)
	at com.microservices.demo.twitter.to.kafka.service.TwitterToKafkaServiceApplicationKt.main(TwitterToKafkaServiceApplication.kt:35)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'twitterToKafkaServiceConfigData' defined in file [C:\kotlin-microservices-study\microservices-demo\twitter-to-kafka-service\build\classes\kotlin\main\com\microservices\demo\twitter\to\kafka\service\config\TwitterToKafkaServiceConfigData.class]: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.microservices.demo.twitter.to.kafka.service.config.TwitterToKafkaServiceConfigData$$EnhancerBySpringCGLIB$$f0135fd4]: No default constructor found; nested exception is java.lang.NoSuchMethodException: com.microservices.demo.twitter.to.kafka.service.config.TwitterToKafkaServiceConfigData$$EnhancerBySpringCGLIB$$f0135fd4.<init>()
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1334)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1232)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1389)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1309)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 18 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.microservices.demo.twitter.to.kafka.service.config.TwitterToKafkaServiceConfigData$$EnhancerBySpringCGLIB$$f0135fd4]: No default constructor found; nested exception is java.lang.NoSuchMethodException: com.microservices.demo.twitter.to.kafka.service.config.TwitterToKafkaServiceConfigData$$EnhancerBySpringCGLIB$$f0135fd4.<init>()
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:83)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1326)
	... 30 common frames omitted
Caused by: java.lang.NoSuchMethodException: com.microservices.demo.twitter.to.kafka.service.config.TwitterToKafkaServiceConfigData$$EnhancerBySpringCGLIB$$f0135fd4.<init>()
	at java.base/java.lang.Class.getConstructor0(Class.java:3349)
	at java.base/java.lang.Class.getDeclaredConstructor(Class.java:2553)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:78)
	... 31 common frames omitted
